@using Microsoft.AspNetCore.Components.Authorization
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject IJSRuntime JS

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
                <Authorizing>
                    <div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
                        <div class="text-center">
                            <div class="spinner-border text-primary mb-3" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p>Checking authentication...</p>
                        </div>
                    </div>
                </Authorizing>
                <NotAuthorized>
                    @if (routeData.PageType?.FullName?.Contains("Login") == true)
                    {
                        <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)" />
                    }
                    else if (context?.User?.Identity?.IsAuthenticated == false)
                    {
                        <LayoutView Layout="typeof(Layout.MainLayout)">
                            <RedirectToLogin />
                        </LayoutView>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="typeof(Layout.MainLayout)">
                <p class="m-3">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
}